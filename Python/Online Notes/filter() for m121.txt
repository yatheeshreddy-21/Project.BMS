filter() :

It is an inbuilt function which is used to extract specific data from
collection by performing some operation.

--> The length of input collection is greater than or equal to length
    of output collection.

--> The function should always return boolean value i.e., True/False.

--> If function is returning any value based on Default value and 
    Non default value it will consider True or False.

Syntax :

var = filter(fname,collection)
print(list(var))


Flow diagram :




#PROGRAMS :---->
#01) WAP to extract string data items from given list
'''
L=eval(input())
s=lambda val : type(val)==str
out=filter(s,L)
print(list(out))
'''

#OR
'''
print(list(filter(lambda val : type(val)==str,eval(input()))))
'''

#02) WAP to extract all the palindrome integers between 1 to 100
'''
col=range(1,101)
s=lambda num : str(num)==str(num)[::-1]
out=filter(s,col)
print(list(out))
'''

#03) WAP to extract all the float numbers which has exactly 3 floating values
#    from given collection

#input  :  [12,3.456,9.9,'hi',[1,2],5.678]
#output :  [3.456,5.678]
'''
L=eval(input())
s=lambda val : type(val)==float and len(str(val).split('.')[-1])==3
out=filter(s,L)
print(list(out))
'''

#04) WAP to extract all the palindrome strings from given list only if it is
#    starting and ending with vowels
'''
L=eval(input())
s=lambda val : type(val)==str and val==val[::-1] and val[0] in 'AEIOUaeiou' and val[-1] in 'AEIOUaeiou'
out=filter(s,L)
print(list(out))
'''
#05) input  :  [ 2,3.4,3+4j,3,'hi',4 ]
#    output :  [ 2,6,24 ]

def factorial(num,fact=1):
    for i in range(1,num+1):
        fact*=i
    return fact
    

L=eval(input())
s=lambda val : type(val)==int
integers=filter(s,L)

out=map(factorial,integers)
print(list(out))