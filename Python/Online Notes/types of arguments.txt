TYPES OF ARGUMENTS :

1) positional arguments
2) default arguments
3) keyword arguments
4) variable length arguments

1) positional arguments :

--> The arguments which are declared at the time of function 
    declaration without assigning any default value are called as
    positional arguments.

--> It is mandatory to pass the values for all the positional 
    arguments in a given function.

#EXAMPLES:

#01)
'''
def add(a,b,c):
    print(a+b+c)

add(10,20,30)
'''

#02)
'''
d={}
def students(name,phno1,phno2):
    d[name]=[phno1,phno2]
    print(d)

students('halasadevi',84313536667,9902110554)
 ''' 

02)Default Argument:
           The arguments which are declared at the time of function
   declaration with default value.

--> For default argument passing a value is optional , while passing 
    default value it should be passed after positional argument or 
    at the last.We can not change / swap it.

Examples:

#EXAMPLES:

#01)
'''
def add(a,b,c=0):
    print(a+b+c)

add(10,20)
'''

#02)
'''
d={}
def students(name,phno1,phno2=0):
    d[name]=[phno1,phno2]
    print(d)

students('halasadevi',84313536667,9902110554)
'''


03)Keyword Argument:
           The arguments which are declared at the time of function
   call , as key word pair , where key is an argument name and 
   word is the value.

--> When we use keyword arguments the order of arguments can be 
    changed.

#EXAMPLES:

#01)
'''
def add(a,b,c):
    print(a+b+c)

add(a=10,c=30,b=20)
'''


#02)
'''
d={}
def students(name,phno1,phno2):
    d[name]=[phno1,phno2]
    print(d)

students(phno1=84313536667,phno2=9902110554,name='halasadevi')
'''

04)Variable length argument:

             The arguments which are declared at the time of function
   declaration , which takes 0 to N number of arguments.

There are 2 types :

one with *
other one with **

--> For variable length argument the name can be anything,but 
    according to the standards , we use *args and **kwargs.

--> *args accepts only Positional arguments.
--> **kwargs accepts only keyword arguments.











